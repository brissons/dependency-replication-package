repo_id<-family[j,]$repo_id
dependencies<-family[j,]$dependencies
deps<-strsplit(dependencies, ";")[[1]]
deps<-str_trim(deps[deps!=" "])
for(k in 1:length(deps)) {
components<-strsplit(deps[k], ":")[[1]]
if(length(components) > 1) {
deps[k]<-components[1:(length(components)-1)]
}
}
jaccard<-1-(length(intersect(base_deps, deps))/length(union(base_deps, deps)))
dataset[which(dataset$repo_id==repo_id),]$new_jaccard<-jaccard
}
}
qplot(dataset[which(dataset$new_jaccard>0),]$new_jaccard, xlab = "Jaccard distance", ylab = "Number of Forks", bins=50)
ggplot(data=dataset[which(dataset$new_jaccard>0),], aes(new_jaccard, fill=depth)) + geom_histogram() + theme_bw()
dataset2<-dataset[-which(dataset$depth==0),]
test2<-aov(new_jaccard~depth, data=dataset2)
summary(test2)
TukeyHSD(test2)
plot(test2, 1)
library(car)
leveneTest(new_jaccard~depth, data=dataset2)
plot(test2, 2)
test2_residuals<-residuals(object = test2)
shapiro.test(x=test2_residuals)
test3<-kruskal.test(new_jaccard~depth, data=dataset2)
dataset2<-dataset[-which(dataset$depth==0),]
test2<-aov(activityDensity~depth, data=dataset2)
summary(test2)
TukeyHSD(test2)
plot(test2, 1)
library(car)
leveneTest(activityDensity~depth, data=dataset2)
plot(test2, 2)
test2_residuals<-residuals(object = test2)
shapiro.test(x=test2_residuals)
test3<-kruskal.test(activityDensity~depth, data=dataset2)
dataset<-mutate(dataset, median_age=numeric(nrow(dataset)))
dataset<-mutate(dataset, median_commits=numeric(nrow(dataset)))
dataset<-mutate(dataset, activity=character(nrow(dataset)))
for(i in unique(dataset$parent_id)) {
print(i)
family<-dataset[which(dataset$parent_id==i),]
median_age<-median(family$age)
median_commits<-median(family$commit_count)
dataset[which(dataset$parent_id==i),]$median_age<-rep(median_age, nrow(family))
dataset[which(dataset$parent_id==i),]$median_commits<-rep(median_commits, nrow(family))
for(j in 1:nrow(family)) {
repo_id<-family[j,]$repo_id
if(dataset[which(dataset$repo_id==repo_id),]$age<=median_age) {
if(dataset[which(dataset$repo_id==repo_id),]$commit_count<=median_commits) {
dataset[which(dataset$repo_id==repo_id),]$activity<-"Short-Low"
}
else {
dataset[which(dataset$repo_id==repo_id),]$activity<-"Short-Heavy"
}
}
else {
if(dataset[which(dataset$repo_id==repo_id),]$commit_count<=median_commits) {
dataset[which(dataset$repo_id==repo_id),]$activity<-"Long-Low"
}
else {
dataset[which(dataset$repo_id==repo_id),]$activity<-"Long-Heavy"
}
}
}
}
dataset$activity<-as.factor(dataset$activity)
for(i in unique(dataset$parent_id)) {
print(i)
family<-dataset[which(dataset$parent_id==i),]
pdf(paste0("Plots/Scatter/",i,".pdf"))
print(qplot(x=family$age, y=family$commit_count, geom=c("point", "smooth")))
dev.off()
# tryCatch({
#   fam<-family[,c("commits", "total_dependencies", "stars", "forks", "user_count", "followers_repo", "issue_repo", "ageindays")]
#   colnames(fam)<-c("comm", "dep", "stars", "forks", "users", "foll", "issues", "age")
#   pdf(paste0("Plots/Corr/",i,".pdf"))
#   correlations<-cor(fam)
#   ptest<-cor.mtest(fam, conf.level=.95)
#   corrplot.mixed(correlations, p.mat=ptest$p, sig.level=.05)
#   dev.off()
# }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
pdf(paste0("Plots/Dotplot/", i, ".pdf"))
print(qplot(densitybins, new_jaccard, data = family,
geom = c("dotplot"), stackdir = "center", stackratio=0.2, binaxis = "y",
color = depth, fill = depth))
dev.off()
pdf(paste0("Plots/Histo/", i, ".pdf"))
print(qplot(activity, data = family))
dev.off()
}
dataset<-mutate(dataset, activity_direction=character(nrow(dataset)))
dataset<-mutate(dataset, activity_slope=numeric(nrow(dataset)))
normal<-c()
abnormal<-c()
for(i in unique(dataset$parent_id)) {
print(i)
family<-dataset[which(dataset$parent_id==i),]
slope<-lm(commit_count~age, data = family)$coefficients[2]
dataset[which(dataset$parent_id==i),]$activity_slope<-rep(slope, nrow(family))
t<-table(family$activity)
print(t)
if(t[2]<t[1] || t[3]<t[4]) {
normal<-c(normal,i)
dataset[which(dataset$parent_id==i),]$activity_direction<-rep("Positive", nrow(family))
}
else {
abnormal<-c(abnormal, i)
dataset[which(dataset$parent_id==i),]$activity_direction<-rep("Negative", nrow(family))
}
}
dataset$activity_direction<-as.factor(dataset$activity_direction)
families<-unique(dataset[,c("parent_id","activity_direction","activity_slope")])
families<-arrange(families, activity_slope)
families$parent_id<-as.factor(families$parent_id)
ggplot(data=families, aes(x=seq_along(parent_id), y=activity_slope, fill=activity_direction))+geom_bar(stat="identity")
types_summarized<-{}
type$parent_id<-as.factor(type$parent_id)
type_df<-type %>% filter(X1.Commit %in% c("Social", "Hard")) %>% group_by(parent_id, X1.Commit) %>% summarise(counts=n()) %>% arrange(counts)
type_df_wide<-spread(type_df, X1.Commit, counts, fill=0)
types_summarized <- rbind(types_summarized, c(class="X1.Commit", colSums(type_df_wide[,-1])[1], colSums(type_df_wide[,-1])[2]))
type_df[which(type_df$X1.Commit=="Social"),]$counts<-type_df[which(type_df$X1.Commit=="Social"),]$counts*(-1)
ggplot(type_df, aes(x=reorder(parent_id,counts), y=counts)) + geom_bar(aes(color=X1.Commit, fill=X1.Commit), stat="identity", position = position_stack())+theme(axis.text.x = element_text(angle=90))
type$parent_id<-as.factor(type$parent_id)
type_df<-type %>% filter(X0.3 %in% c("Social", "Hard")) %>% group_by(parent_id, X0.3) %>% summarise(counts=n())
type_df_wide<-spread(type_df, X0.3, counts, fill=0)
types_summarized <- rbind(types_summarized, c(class="X0.3", colSums(type_df_wide[,-1])[1], colSums(type_df_wide[,-1])[2]))
type_df[which(type_df$X0.3=="Social"),]$counts<-type_df[which(type_df$X0.3=="Social"),]$counts*(-1)
ggplot(type_df, aes(x=reorder(parent_id,counts), y=counts)) + geom_bar(aes(color=X0.3, fill=X0.3), stat="identity", position = position_stack())+theme(axis.text.x = element_text(angle=90))
type$parent_id<-as.factor(type$parent_id)
type_df<-type %>% filter(X0.7 %in% c("Social", "Hard")) %>% group_by(parent_id, X0.7) %>% summarise(counts=n())
type_df_wide<-spread(type_df, X0.7, counts, fill=0)
types_summarized <- rbind(types_summarized, c(class="X0.7", colSums(type_df_wide[,-1])[1], colSums(type_df_wide[,-1])[2]))
type_df[which(type_df$X0.7=="Social"),]$counts<-type_df[which(type_df$X0.7=="Social"),]$counts*(-1)
ggplot(type_df, aes(x=reorder(parent_id,counts), y=counts)) + geom_bar(aes(color=X0.7, fill=X0.7), stat="identity", position = position_stack())+theme(axis.text.x = element_text(angle=90))
type$parent_id<-as.factor(type$parent_id)
type_df<-type %>% filter(X0.9 %in% c("Social", "Hard")) %>% group_by(parent_id, X0.9) %>% summarise(counts=n())
type_df_wide<-spread(type_df, X0.9, counts, fill=0)
types_summarized <- rbind(types_summarized, c(class="X0.9", colSums(type_df_wide[,-1])[1], colSums(type_df_wide[,-1])[2]))
type_df[which(type_df$X0.9=="Social"),]$counts<-type_df[which(type_df$X0.9=="Social"),]$counts*(-1)
ggplot(type_df, aes(x=reorder(parent_id,counts), y=counts)) + geom_bar(aes(color=X0.9, fill=X0.9), stat="identity", position = position_stack())+theme(axis.text.x = element_text(angle=90))
type$parent_id<-as.factor(type$parent_id)
type_df<-type %>% filter(ALL %in% c("Social", "Hard")) %>% group_by(parent_id, ALL) %>% summarise(counts=n())
type_df_wide<-spread(type_df, ALL, counts, fill=0)
types_summarized <- rbind(types_summarized, c(class="ALL", colSums(type_df_wide[,-1])[1], colSums(type_df_wide[,-1])[2]))
type_df[which(type_df$ALL=="Social"),]$counts<-type_df[which(type_df$ALL=="Social"),]$counts*(-1)
ggplot(type_df, aes(x=reorder(parent_id,counts), y=counts)) + geom_bar(aes(color=ALL, fill=ALL), stat="identity", position = position_stack())+theme(axis.text.x = element_text(angle=90))
types_summarized_long<-gather(as.data.frame(types_summarized), Type, count, Hard:Social)
types_summarized_long$count<-as.numeric(types_summarized_long$count)
types_summarized_long$class<-factor(types_summarized_long$class, levels=c("X1.Commit", "X0.3", "X0.7", "X0.9", "ALL"))
types_summarized_long<-types_summarized_long %>% arrange(class)
ggplot(types_summarized_long, aes(x=class, y=count)) + geom_bar(aes(color=Type, fill=Type), stat="identity", position = position_stack())#+theme(axis.text.x = element_text(angle=90))
dataset$parent_id<-as.factor(dataset$parent_id)
dataset2<-left_join(dataset, type, by=c("repo_id", "parent_id"))
types_comb<-dataset2[,c(1,7,71:75)]
types_comb<-types_comb %>% filter(X1.Commit %in% c("Social", "Hard")) %>% filter(X0.3 %in% c("Social", "Hard")) %>% filter(X0.7 %in% c("Social", "Hard")) %>% filter(X0.9 %in% c("Social", "Hard")) %>% filter(ALL %in% c("Social", "Hard"))
types_comb[which(types_comb$is_hard_fork==0),]$is_hard_fork<-"Social"
types_comb[which(types_comb$is_hard_fork==1),]$is_hard_fork<-"Hard"
cm_tab<-{}
truth<-as.factor(types_comb$is_hard_fork)
pred<-as.factor(types_comb$X1.Commit)
cm<-confusionMatrix(truth, pred)
cm_tab<-rbind(cm_tab, c("X1.Commit", cm$byClass[5], cm$byClass[6], cm$byClass[4]))
truth<-as.factor(types_comb$is_hard_fork)
pred<-as.factor(types_comb$X0.3)
cm<-confusionMatrix(truth, pred)
cm_tab<-rbind(cm_tab, c("X0.3", cm$byClass[5], cm$byClass[6], cm$byClass[4]))
truth<-as.factor(types_comb$is_hard_fork)
pred<-as.factor(types_comb$X0.7)
cm<-confusionMatrix(truth, pred)
cm_tab<-rbind(cm_tab, c("X0.7", cm$byClass[5], cm$byClass[6], cm$byClass[4]))
truth<-as.factor(types_comb$is_hard_fork)
pred<-as.factor(types_comb$X0.9)
cm<-confusionMatrix(truth, pred)
cm_tab<-rbind(cm_tab, c("X0.9", cm$byClass[5], cm$byClass[6], cm$byClass[4]))
truth<-as.factor(types_comb$is_hard_fork)
pred<-as.factor(types_comb$ALL)
cm<-confusionMatrix(truth, pred)
cm_tab<-rbind(cm_tab, c("ALL", cm$byClass[5], cm$byClass[6], cm$byClass[4]))
significant_jaccard_familiesALL<-c()
insignificant_jaccard_familiesALL<-c()
significant_activity_familiesALL<-c()
insignificant_activity_familiesALL<-c()
onedimension_familiesALL<-c()
for(i in unique(dataset2$parent_id)) {
print(i)
family<-dataset2[which(dataset2$parent_id==i),]
family<-family[-which(family$ALL=="Parent" | is.na(family$ALL)),]
family$ALL<-factor(family$ALL)
if(length(levels(family$ALL))==2) {
test<-wilcox.test(new_jaccard~ALL, data=family)
if(!is.na(test$p.value) && test$p.value<0.05) {
significant_jaccard_familiesALL<-c(significant_jaccard_familiesALL, i)
}
else {
insignificant_jaccard_familiesALL<-c(insignificant_jaccard_familiesALL, i)
}
test<-wilcox.test(activityDensity~ALL, data=family)
if(!is.na(test$p.value) && test$p.value<0.05) {
significant_activity_familiesALL<-c(significant_activity_familiesALL, i)
}
else {
insignificant_activity_familiesALL<-c(insignificant_activity_familiesALL, i)
}
}
else {
onedimension_familiesALL<-c(onedimension_familiesALL, i)
}
}
length(significant_jaccard_familiesALL)
length(insignificant_jaccard_familiesALL)
length(significant_activity_familiesALL)
length(insignificant_activity_familiesALL)
length((onedimension_familiesALL))
significant_jaccard_families70<-c()
insignificant_jaccard_families70<-c()
significant_activity_families70<-c()
insignificant_activity_families70<-c()
onedimension_families70<-c()
for(i in unique(dataset2$parent_id)) {
print(i)
family<-dataset2[which(dataset2$parent_id==i),]
family<-family[-which(family$X0.7=="Parent" | is.na(family$X0.7)),]
family$X0.7<-factor(family$X0.7)
if(length(levels(family$X0.7))==2) {
test<-wilcox.test(new_jaccard~X0.7, data=family)
if(!is.na(test$p.value) && test$p.value<0.05) {
significant_jaccard_families70<-c(significant_jaccard_families70, i)
}
else {
insignificant_jaccard_families70<-c(insignificant_jaccard_families70, i)
}
test<-wilcox.test(activityDensity~X0.7, data=family)
if(!is.na(test$p.value) && test$p.value<0.05) {
significant_activity_families70<-c(significant_activity_families70, i)
}
else {
insignificant_activity_families70<-c(insignificant_activity_families70, i)
}
}
else {
onedimension_families70<-c(onedimension_families70, i)
}
}
length(significant_jaccard_families70)
length(insignificant_jaccard_families70)
length(significant_activity_families70)
length(insignificant_activity_families70)
length((onedimension_families70))
significant_jaccard_families90<-c()
insignificant_jaccard_families90<-c()
significant_activity_families90<-c()
insignificant_activity_families90<-c()
onedimension_families90<-c()
for(i in unique(dataset2$parent_id)) {
print(i)
family<-dataset2[which(dataset2$parent_id==i),]
family<-family[-which(family$X0.9=="Parent" | is.na(family$X0.9)),]
family$X0.9<-factor(family$X0.9)
if(length(levels(family$X0.9))==2) {
test<-wilcox.test(new_jaccard~X0.9, data=family)
if(!is.na(test$p.value) && test$p.value<0.05) {
significant_jaccard_families90<-c(significant_jaccard_families90, i)
}
else {
insignificant_jaccard_families90<-c(insignificant_jaccard_families90, i)
}
test<-wilcox.test(activityDensity~X0.9, data=family)
if(!is.na(test$p.value) && test$p.value<0.05) {
significant_activity_families90<-c(significant_activity_families90, i)
}
else {
insignificant_activity_families90<-c(insignificant_activity_families90, i)
}
}
else {
onedimension_families90<-c(onedimension_families90, i)
}
}
length(significant_jaccard_families90)
length(insignificant_jaccard_families90)
length(significant_activity_families90)
length(insignificant_activity_families90)
length((onedimension_families90))
significant_jaccard_families30<-c()
insignificant_jaccard_families30<-c()
significant_activity_families30<-c()
insignificant_activity_families30<-c()
onedimension_families30<-c()
for(i in unique(dataset2$parent_id)) {
print(i)
family<-dataset2[which(dataset2$parent_id==i),]
family<-family[-which(family$X0.3=="Parent" | is.na(family$X0.3)),]
family$X0.3<-factor(family$X0.3)
if(length(levels(family$X0.3))==2) {
test<-wilcox.test(new_jaccard~X0.3, data=family)
if(!is.na(test$p.value) && test$p.value<0.05) {
significant_jaccard_families30<-c(significant_jaccard_families30, i)
}
else {
insignificant_jaccard_families30<-c(insignificant_jaccard_families30, i)
}
test<-wilcox.test(activityDensity~X0.3, data=family)
if(!is.na(test$p.value) && test$p.value<0.05) {
significant_activity_families30<-c(significant_activity_families30, i)
}
else {
insignificant_activity_families30<-c(insignificant_activity_families30, i)
}
}
else {
onedimension_families30<-c(onedimension_families30, i)
}
}
length(significant_jaccard_families30)
length(insignificant_jaccard_families30)
length(significant_activity_families30)
length(insignificant_activity_families30)
length((onedimension_families30))
significant_jaccard_families1<-c()
insignificant_jaccard_families1<-c()
significant_activity_families1<-c()
insignificant_activity_families1<-c()
onedimension_families1<-c()
for(i in unique(dataset2$parent_id)) {
print(i)
family<-dataset2[which(dataset2$parent_id==i),]
family<-family[-which(family$X1.Commit=="Parent" | is.na(family$X1.Commit)),]
family$X1.Commit<-factor(family$X1.Commit)
if(length(levels(family$X1.Commit))==2) {
test<-wilcox.test(new_jaccard~X1.Commit, data=family)
if(!is.na(test$p.value) && test$p.value<0.05) {
significant_jaccard_families1<-c(significant_jaccard_families1, i)
}
else {
insignificant_jaccard_families1<-c(insignificant_jaccard_families1, i)
}
test<-wilcox.test(activityDensity~X1.Commit, data=family)
if(!is.na(test$p.value) && test$p.value<0.05) {
significant_activity_families1<-c(significant_activity_families1, i)
}
else {
insignificant_activity_families1<-c(insignificant_activity_families1, i)
}
}
else {
onedimension_families1<-c(onedimension_families1, i)
}
}
length(significant_jaccard_families1)
length(insignificant_jaccard_families1)
length(significant_activity_families1)
length(insignificant_activity_families1)
length((onedimension_families1))
significant_activity_families1
significant_jaccard_families1
View(significant_activity_families1)
View(significant_jaccard_families1)
View(significant_activity_families30)
View(significant_jaccard_families30)
View(significant_activity_families70)
View(significant_jaccard_families70)
View(significant_activity_families90)
View(significant_jaccard_families90)
View(significant_activity_familiesALL)
View(significant_jaccard_familiesALL)
View(dataset)
View(dataset2)
source('D:/RepositoriesESEM2020/Repositories/esem_analysis.R')
length(significant_jaccard_familiesALL)
significant_jaccard_familiesALL<-c()
insignificant_jaccard_familiesALL<-c()
significant_activity_familiesALL<-c()
insignificant_activity_familiesALL<-c()
onedimension_familiesALL<-c()
for(i in unique(dataset2$parent_id)) {
print(i)
family<-dataset2[which(dataset2$parent_id==i),]
family<-family[-which(family$ALL=="Parent" | is.na(family$ALL)),]
family$ALL<-factor(family$ALL)
if(length(levels(family$ALL))==2) {
test<-wilcox.test(new_jaccard~ALL, data=family)
if(!is.na(test$p.value) && test$p.value<0.025) {
significant_jaccard_familiesALL<-c(significant_jaccard_familiesALL, i)
}
else {
insignificant_jaccard_familiesALL<-c(insignificant_jaccard_familiesALL, i)
}
test<-wilcox.test(activityDensity~ALL, data=family)
if(!is.na(test$p.value) && test$p.value<0.025) {
significant_activity_familiesALL<-c(significant_activity_familiesALL, i)
}
else {
insignificant_activity_familiesALL<-c(insignificant_activity_familiesALL, i)
}
}
else {
onedimension_familiesALL<-c(onedimension_familiesALL, i)
}
}
length(significant_jaccard_familiesALL)
length(insignificant_jaccard_familiesALL)
length(significant_activity_familiesALL)
length(insignificant_activity_familiesALL)
length((onedimension_familiesALL))
significant_jaccard_families70<-c()
insignificant_jaccard_families70<-c()
significant_activity_families70<-c()
insignificant_activity_families70<-c()
onedimension_families70<-c()
for(i in unique(dataset2$parent_id)) {
print(i)
family<-dataset2[which(dataset2$parent_id==i),]
family<-family[-which(family$X0.7=="Parent" | is.na(family$X0.7)),]
family$X0.7<-factor(family$X0.7)
if(length(levels(family$X0.7))==2) {
test<-wilcox.test(new_jaccard~X0.7, data=family)
if(!is.na(test$p.value) && test$p.value<0.025) {
significant_jaccard_families70<-c(significant_jaccard_families70, i)
}
else {
insignificant_jaccard_families70<-c(insignificant_jaccard_families70, i)
}
test<-wilcox.test(activityDensity~X0.7, data=family)
if(!is.na(test$p.value) && test$p.value<0.025) {
significant_activity_families70<-c(significant_activity_families70, i)
}
else {
insignificant_activity_families70<-c(insignificant_activity_families70, i)
}
}
else {
onedimension_families70<-c(onedimension_families70, i)
}
}
length(significant_jaccard_families70)
length(insignificant_jaccard_families70)
length(significant_activity_families70)
length(insignificant_activity_families70)
length((onedimension_families70))
significant_jaccard_families90<-c()
insignificant_jaccard_families90<-c()
significant_activity_families90<-c()
insignificant_activity_families90<-c()
onedimension_families90<-c()
for(i in unique(dataset2$parent_id)) {
print(i)
family<-dataset2[which(dataset2$parent_id==i),]
family<-family[-which(family$X0.9=="Parent" | is.na(family$X0.9)),]
family$X0.9<-factor(family$X0.9)
if(length(levels(family$X0.9))==2) {
test<-wilcox.test(new_jaccard~X0.9, data=family)
if(!is.na(test$p.value) && test$p.value<0.025) {
significant_jaccard_families90<-c(significant_jaccard_families90, i)
}
else {
insignificant_jaccard_families90<-c(insignificant_jaccard_families90, i)
}
test<-wilcox.test(activityDensity~X0.9, data=family)
if(!is.na(test$p.value) && test$p.value<0.025) {
significant_activity_families90<-c(significant_activity_families90, i)
}
else {
insignificant_activity_families90<-c(insignificant_activity_families90, i)
}
}
else {
onedimension_families90<-c(onedimension_families90, i)
}
}
length(significant_jaccard_families90)
length(insignificant_jaccard_families90)
length(significant_activity_families90)
length(insignificant_activity_families90)
length((onedimension_families90))
significant_jaccard_families30<-c()
insignificant_jaccard_families30<-c()
significant_activity_families30<-c()
insignificant_activity_families30<-c()
onedimension_families30<-c()
for(i in unique(dataset2$parent_id)) {
print(i)
family<-dataset2[which(dataset2$parent_id==i),]
family<-family[-which(family$X0.3=="Parent" | is.na(family$X0.3)),]
family$X0.3<-factor(family$X0.3)
if(length(levels(family$X0.3))==2) {
test<-wilcox.test(new_jaccard~X0.3, data=family)
if(!is.na(test$p.value) && test$p.value<0.025) {
significant_jaccard_families30<-c(significant_jaccard_families30, i)
}
else {
insignificant_jaccard_families30<-c(insignificant_jaccard_families30, i)
}
test<-wilcox.test(activityDensity~X0.3, data=family)
if(!is.na(test$p.value) && test$p.value<0.025) {
significant_activity_families30<-c(significant_activity_families30, i)
}
else {
insignificant_activity_families30<-c(insignificant_activity_families30, i)
}
}
else {
onedimension_families30<-c(onedimension_families30, i)
}
}
length(significant_jaccard_families30)
length(insignificant_jaccard_families30)
length(significant_activity_families30)
length(insignificant_activity_families30)
length((onedimension_families30))
